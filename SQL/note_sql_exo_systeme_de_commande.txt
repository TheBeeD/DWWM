


SELECT * WHERE ville='Lyon'OR'Marseille';

select * personne where salaire BETWEEN 2000 and 3000;


SELECT * personne WHERE ville='Lyon' OR 'Marseille';

SELECT * personne WHERE salaire BETWEEN 2000 and 3000;

SELECT * personne WHERE ville='Marseille' AND salaire NOT BETWEEN 2000 AND 2500; 



SELECT * personne WHERE ville='Lyon' OR 'Marseille';

SELECT * personne WHERE salaire BETWEEN 2000 and 3000;

SELECT * personne WHERE ville='Marseille' AND salaire NOT BETWEEN 2000 AND 2500; 

SELECT * FROM personne WHERE ville LIKE'%a%';

SELECT * FROM vehicule WHERE nump IS NOT nul;

SELECT marque, IFNULL(nump) 'pas de propriertaire';

SELECT nump,COUNT(*)AS nombre_vehicule FROM vehicule WHERE nump IS NOT NULL GROUP BY nump;

SELECT * personne GROUP BY ville, SUM(salaire);

SELECT * nump WHERE marque='Renault' UNION SELECT nump WHERE marque='Citroen';

SELECT nom, prenom, ville, marque, model
FROM personne JOIN vehicule 
ON num = nump
UNION
SELECT nom, prenom, ville, marque, model
FROM vehicule left join personne
ON nump = num
UNION
SELECT nom, prenom, ville, marque, model
FROM vehicule right join personne
ON nump = num;
===
SELECT nom, prenom, ville, marque, modele
FROM personne FULL JOIN vehicule ON num = nump;


SELECT prenom='Muriel' FROM `client` AND Sha1(password)=Sha1(test11); ne fonctionne pas

SELECT * FROM client WHERE prenom = 'Muriel' AND (client.password = sha1('test11')); fonctionne

SELECT * FROM client WHERE prenom = 'Muriel' AND (client.password = sha1('test11'));
SELECT * FROM commande WHERE nom = nom.commande_ligne;

SELECT * FROM commande WHERE (nom.commande = nom.commande_ligne) AND INSERT IN commande COLUMN ;
===
SELECT nom, COUNT(*) AS nbr_items 
FROM `commande_ligne` 
GROUP BY nom 
HAVING nbr_items > 1
ORDER BY nbr_items DESC;

------------------------------------------------------------------------------------
1)

SELECT * FROM client WHERE prenom = 'Muriel' AND (client.password = sha1('test11'));
SELECT nom, COUNT(*) AS nbr_items 
FROM `commande_ligne` 
GROUP BY nom 
HAVING nbr_items > 1
ORDER BY nbr_items DESC;

2)

SELECT nom, COUNT(*) AS nbr_items , GROUP_CONCAT(`commande_id`) AS liste_commandes
FROM `commande_ligne` 
GROUP BY nom 
HAVING nbr_items > 1
ORDER BY nbr_items DESC;

3)

UPDATE `commande_ligne` 
SET  `prix_total` = (`quantite` * `prix_unitaire`);

4)

SELECT client.prenom, client.nom, commande.date_achat, commande_id, SUM(prix_total) AS prix_commande 
FROM `commande_ligne` 
LEFT JOIN commande ON commande.id = commande_ligne.commande_id
LEFT JOIN client ON client.id = commande.client_id
GROUP BY `commande_id`;

5)

UPDATE commande AS t1 
INNER JOIN 
    ( SELECT commande_id, SUM(commande_ligne.prix_total) AS p_total 
      FROM commande_ligne 
      GROUP BY commande_id ) t2 
          ON  t1.id = t2.commande_id 
SET t1.cache_prix_total = t2.p_total;

7)

SELECT YEAR(`date_achat`), MONTH(`date_achat`), SUM(`cache_prix_total`) 
FROM `commande` 
GROUP BY YEAR(`date_achat`), MONTH(`date_achat`)
ORDER BY YEAR(`date_achat`), MONTH(`date_achat`);

8)

SELECT client.nom, client.prenom, SUM(commande.cache_prix_total) AS client_montant
FROM `commande` 
LEFT JOIN client ON client.id = commande.client_id
GROUP BY commande.client_id
ORDER BY client_montant DESC
LIMIT 10

9)

SELECT `date_achat`, SUM(`cache_prix_total`) 
FROM `commande` 
GROUP BY `date_achat`;

10)

ALTER TABLE `commande` ADD `category` integer NOT NULL AFTER `cache_prix_total`;

11)

UPDATE `commande`
SET `category` =(
    CASE
    WHEN cache_prix_total<200 THEN 1
    WHEN cache_prix_total<500 THEN 2
    WHEN cache_prix_total<1000 THEN 3
    ELSE 4
END);

12)

CREATE TABLE `commande_category` (
  `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `nom` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

13)

INSERT INTO `commande_category` (`id`, `nom`) VALUES (1, 'commandes de moins de 200€');
INSERT INTO `commande_category` (`id`, `nom`) VALUES (2, 'commandes entre 200€ et 500€');
INSERT INTO `commande_category` (`id`, `nom`) VALUES (3, 'commandes entre 500€ et 1.000€');
INSERT INTO `commande_category` (`id`, `nom`) VALUES (4, 'commandes supérieures à 1.000€');


14)

DELETE FROM `commande` WHERE date_achat < '2019-02-01'; fonctionne
DELETE FROM `commande_ligne` WHERE date_achat < '2019-02-01'; ne fonctionne pas

mais la je suis pas sur d'avoir effaçé toute l'entrée

DELETE FROM `commande_ligne` WHERE `commande_id` 
IN ( SELECT id FROM commande WHERE date_achat < '2019-02-01' );

